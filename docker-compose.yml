version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: soul-miners-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: soul_miners_medusa
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Event Bus
  redis:
    image: redis:7-alpine
    container_name: soul-miners-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Medusa Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: soul-miners-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/soul_miners_medusa
      REDIS_URL: redis://redis:6379
      MEDUSA_BACKEND_URL: http://localhost:9000
      NODE_ENV: development
      STORE_CORS: http://localhost:4321,http://localhost:8000
      ADMIN_CORS: http://localhost:7001,http://localhost:9000
      AUTH_CORS: http://localhost:7001,http://localhost:9000
      JWT_SECRET: supersecret-change-in-production
      COOKIE_SECRET: supersecret-change-in-production
      # Add Stripe keys from .env file
      STRIPE_API_KEY: ${STRIPE_API_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
    ports:
      - "9000:9000"
      - "7001:7001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
